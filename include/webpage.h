#ifndef WEBPAGE_H
#define WEBPAGE_H

#include "Arduino.h"
#include "chartjs.h"

const PROGMEM char *indexPage = "<!DOCTYPE html>\n"
                                "<html lang=\"en\">\n"
                                "\n"
                                "<head>\n"
                                "    <meta charset=\"utf-8\">\n"
                                "    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n"
                                "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n"
                                "    <title>Platform Stabilization Demo</title>\n"
                                "    <style>\n"
                                "        body {\n"
                                "            font-family: Arial, sans-serif;\n"
                                "            margin: 20px;\n"
                                "            background-color: #f5f5f5;\n"
                                "            display: flex;\n"
                                "            justify-content: center;\n"
                                "            align-items: center;\n"
                                "        }\n"
                                "\n"
                                "        .container {\n"
                                "            max-width: 1000px;\n"
                                "            background-color: #fff;\n"
                                "            padding: 20px;\n"
                                "            border-radius: 8px;\n"
                                "            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n"
                                "        }\n"
                                "\n"
                                "        h1 {\n"
                                "            color: #333;\n"
                                "            text-align: center;\n"
                                "        }\n"
                                "\n"
                                "        label {\n"
                                "            display: block;\n"
                                "            margin-bottom: 5px;\n"
                                "            color: #333;\n"
                                "        }\n"
                                "\n"
                                "        input {\n"
                                "            width: calc(100% - 16px);\n"
                                "            padding: 8px;\n"
                                "            margin-bottom: 10px;\n"
                                "            box-sizing: border-box;\n"
                                "            border: 1px solid #ccc;\n"
                                "            border-radius: 4px;\n"
                                "        }\n"
                                "\n"
                                "        button {\n"
                                "            display: block;\n"
                                "            margin: 0 auto;\n"
                                "            padding: 10px 15px;\n"
                                "            background-color: #4CAF50;\n"
                                "            color: #fff;\n"
                                "            border: none;\n"
                                "            border-radius: 4px;\n"
                                "            cursor: pointer;\n"
                                "        }\n"
                                "\n"
                                "        button:hover {\n"
                                "            background-color: #45a049;\n"
                                "        }\n"
                                "\n"
                                "        .slider-container {\n"
                                "            margin-top: 20px;\n"
                                "            text-align: center;\n"
                                "            position: relative;\n"
                                "        }\n"
                                "\n"
                                "        .slider {\n"
                                "            width: 80%;\n"
                                "            margin: 0 auto;\n"
                                "        }\n"
                                "\n"
                                "        .clock {\n"
                                "            position: relative;\n"
                                "            width: 200px;\n"
                                "            height: 200px;\n"
                                "            border-radius: 50%;\n"
                                "            background-color: #f8f8f8;\n"
                                "            margin: 20px auto;\n"
                                "        }\n"
                                "\n"
                                "        .clock-arm {\n"
                                "            position: absolute;\n"
                                "            width: 2px;\n"
                                "            height: 80px;\n"
                                "            background-color: #4285f4;\n"
                                "            top: 10%;\n"
                                "            left: 50%;\n"
                                "            transform-origin: 0 100%;\n"
                                "            transform: translateX(-50%) rotate(0deg);\n"
                                "            transition: transform 0.3s ease;\n"
                                "        }\n"
                                "\n"
                                "        .grayed-out {\n"
                                "            color: #999;\n"
                                "        }\n"
                                "    </style>\n"
                                "</head>\n"
                                "\n"
                                "<body>\n"
                                "    <div class=\"container\">\n"
                                "        <h1>Platform Stabilization PID Tuning</h1>\n"
                                "\n"
                                "        <div>\n"
                                "            <button onclick=\"toggleStabilization()\" id=\"stabilization-toggle\">ON</button>\n"
                                "        </div>\n"
                                "\n"
                                "        <div class=\"input-container\">\n"
                                "            <p>Platform Speed Controller:</p>\n"
                                "            <label for=\"speedPIDp\">P Constant:</label>\n"
                                "            <input type=\"number\" id=\"speedPIDp\" step=\"0.01\" value=\"1.0\">\n"
                                "            <br>\n"
                                "            <label for=\"speedPIDi\">I Constant:</label>\n"
                                "            <input type=\"number\" id=\"speedPIDi\" step=\"0.01\" value=\"0.1\">\n"
                                "            <br>\n"
                                "            <label for=\"speedPIDd\">D Constant:</label>\n"
                                "            <input type=\"number\" id=\"speedPIDd\" step=\"0.01\" value=\"0.01\">\n"
                                "        </div>\n"
                                "\n"
                                "        <div class=\"input-container\">\n"
                                "            <p>Platform Pointing Controller:</p>\n"
                                "            <label for=\"pointingPIDp\">P Constant:</label>\n"
                                "            <input type=\"number\" id=\"pointingPIDp\" step=\"0.01\" value=\"1.0\">\n"
                                "            <br>\n"
                                "            <label for=\"pointingPIDi\">I Constant:</label>\n"
                                "            <input type=\"number\" id=\"pointingPIDi\" step=\"0.01\" value=\"0.1\">\n"
                                "            <br>\n"
                                "            <label for=\"pointingPIDd\">D Constant:</label>\n"
                                "            <input type=\"number\" id=\"pointingPIDd\" step=\"0.01\" value=\"0.01\">\n"
                                "        </div>\n"
                                "\n"
                                "        <div>\n"
                                "            <p>Apply Settings (Please prevent the platform from spinning until the motor stops)</p>\n"
                                "            <button id=\"settings-button\" onclick=\"applySettings()\">Apply Settings!</button>\n"
                                "        </div>\n"
                                "\n"
                                "        <div>\n"
                                "            <button id=\"save-flash\" onclick=\"saveToFlash()\">Save Settings to Flash Memory!</button>\n"
                                "        </div>\n"
                                "\n"
                                "        <div class=\"slider-container\">\n"
                                "            <p>Target:</p>\n"
                                "            <p id=\"target\">0</p>\n"
                                "            <input type=\"range\" min=\"0\" max=\"359\" value=\"180\" class=\"slider\" id=\"slider\" oninput=\"sliderChange()\">\n"
                                "        </div>\n"
                                "\n"
                                "        <div class=\"clock\">\n"
                                "            <div class=\"clock-arm\" id=\"clock-arm\"></div>\n"
                                "        </div>\n"
                                "\n"
                                "        <div class=\"input-container\">\n"
                                "            <button onclick=\"toggleSlider()\" id=\"state-change\">Pointing Mode</button>\n"
                                "        </div>\n"
                                "\n"
                                "\n"
                                "        <div>\n"
                                "            <button id=\"show-hide-pointing\" onclick=\"toggleChartVisibility('pointingCnv')\">Show/Hide Pointing\n"
                                "                Chart</button>\n"
                                "        </div>\n"
                                "\n"
                                "        <div>\n"
                                "            <button id=\"show-hide-speed\" onclick=\"toggleChartVisibility('speedCnv')\">Show/Hide Speed Chart</button>\n"
                                "        </div>\n"
                                "\n"
                                "\n"
                                "        <div class=\"pointingCnv\" style=\"display: block;\">\n"
                                "            <p>Pointing</p>\n"
                                "            <canvas id=\"pointingCtx\"></canvas>\n"
                                "        </div>\n"
                                "\n"
                                "        <div class=\"speedCnv\" style=\"display: block;\">\n"
                                "            <p>Speed</p>\n"
                                "            <canvas id=\"speedCtx\"></canvas>\n"
                                "        </div>\n"
                                "\n"
                                "    </div>\n"
                                "\n"
                                "    <script>\n"
                                "\n"
                                CHART_JS
                                "\n"
                                "        var stabilization = true;\n"
                                "\n"
                                "        const pointingCtx = document.getElementById('pointingCtx');\n"
                                "        const speedCtx = document.getElementById('speedCtx');\n"
                                "\n"
                                "        const pointingChart = new Chart(pointingCtx, {\n"
                                "            type: 'line',\n"
                                "            data: {\n"
                                "                labels: [-5.0, -4.975, -4.95, -4.925, -4.9, -4.875, -4.85, -4.825, -4.8, -4.775, -4.75, -4.725, -4.7, -4.675, -4.65, -4.625, -4.6, -4.575, -4.55, -4.525, -4.5, -4.475, -4.45, -4.425, -4.4, -4.375, -4.35, -4.325, -4.3, -4.275, -4.25, -4.225, -4.2, -4.175, -4.15, -4.125, -4.1, -4.075, -4.05, -4.025, -4.0, -3.975, -3.95, -3.925, -3.9, -3.875, -3.85, -3.825, -3.8, -3.775, -3.75, -3.725, -3.7, -3.675, -3.65, -3.625, -3.6, -3.575, -3.55, -3.525, -3.5, -3.475, -3.45, -3.425, -3.4, -3.375, -3.35, -3.325, -3.3, -3.275, -3.25, -3.225, -3.2, -3.175, -3.15, -3.125, -3.1, -3.075, -3.05, -3.025, -3.0, -2.975, -2.95, -2.925, -2.9, -2.875, -2.85, -2.825, -2.8, -2.775, -2.75, -2.725, -2.7, -2.675, -2.65, -2.625, -2.6, -2.575, -2.55, -2.525, -2.5, -2.475, -2.45, -2.425, -2.4, -2.375, -2.35, -2.325, -2.3, -2.275, -2.25, -2.225, -2.2, -2.175, -2.15, -2.125, -2.1, -2.075, -2.05, -2.025, -2.0, -1.975, -1.95, -1.925, -1.9, -1.875, -1.85, -1.825, -1.8, -1.775, -1.75, -1.725, -1.7, -1.675, -1.65, -1.625, -1.6, -1.575, -1.55, -1.525, -1.5, -1.475, -1.45, -1.425, -1.4, -1.375, -1.35, -1.325, -1.3, -1.275, -1.25, -1.225, -1.2, -1.175, -1.15, -1.125, -1.1, -1.075, -1.05, -1.025, -1.0, -0.975, -0.95, -0.925, -0.9, -0.875, -0.85, -0.825, -0.8, -0.775, -0.75, -0.725, -0.7, -0.675, -0.65, -0.625, -0.6, -0.575, -0.55, -0.525, -0.5, -0.475, -0.45, -0.425, -0.4, -0.375, -0.35, -0.325, -0.3, -0.275, -0.25, -0.225, -0.2, -0.175, -0.15, -0.125, -0.1, -0.075, -0.05, -0.025]\n"
                                "                ,\n"
                                "                datasets: [{\n"
                                "                    label: 'PID setpoint (DEG)',\n"
                                "                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"
                                "                    ,\n"
                                "                    borderWidth: 1\n"
                                "                }, {\n"
                                "                    label: 'Real value (DEG)',\n"
                                "                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"
                                "                    ,\n"
                                "                    borderWidth: 1\n"
                                "                }]\n"
                                "            },\n"
                                "            options: {\n"
                                "                animation: false,\n"
                                "                spanGaps: true, // enable for all datasets\n"
                                "                datasets: {\n"
                                "                    line: {\n"
                                "                        pointRadius: 0 // disable for all `'line'` datasets\n"
                                "                    }\n"
                                "                },\n"
                                "                elements: {\n"
                                "                    point: {\n"
                                "                        radius: 0 // default to disabled in all datasets\n"
                                "                    }\n"
                                "                }\n"
                                "            }\n"
                                "        });\n"
                                "\n"
                                "        const speedChart = new Chart(speedCtx, {\n"
                                "            type: 'line',\n"
                                "            data: {\n"
                                "                labels: [-5.0, -4.975, -4.95, -4.925, -4.9, -4.875, -4.85, -4.825, -4.8, -4.775, -4.75, -4.725, -4.7, -4.675, -4.65, -4.625, -4.6, -4.575, -4.55, -4.525, -4.5, -4.475, -4.45, -4.425, -4.4, -4.375, -4.35, -4.325, -4.3, -4.275, -4.25, -4.225, -4.2, -4.175, -4.15, -4.125, -4.1, -4.075, -4.05, -4.025, -4.0, -3.975, -3.95, -3.925, -3.9, -3.875, -3.85, -3.825, -3.8, -3.775, -3.75, -3.725, -3.7, -3.675, -3.65, -3.625, -3.6, -3.575, -3.55, -3.525, -3.5, -3.475, -3.45, -3.425, -3.4, -3.375, -3.35, -3.325, -3.3, -3.275, -3.25, -3.225, -3.2, -3.175, -3.15, -3.125, -3.1, -3.075, -3.05, -3.025, -3.0, -2.975, -2.95, -2.925, -2.9, -2.875, -2.85, -2.825, -2.8, -2.775, -2.75, -2.725, -2.7, -2.675, -2.65, -2.625, -2.6, -2.575, -2.55, -2.525, -2.5, -2.475, -2.45, -2.425, -2.4, -2.375, -2.35, -2.325, -2.3, -2.275, -2.25, -2.225, -2.2, -2.175, -2.15, -2.125, -2.1, -2.075, -2.05, -2.025, -2.0, -1.975, -1.95, -1.925, -1.9, -1.875, -1.85, -1.825, -1.8, -1.775, -1.75, -1.725, -1.7, -1.675, -1.65, -1.625, -1.6, -1.575, -1.55, -1.525, -1.5, -1.475, -1.45, -1.425, -1.4, -1.375, -1.35, -1.325, -1.3, -1.275, -1.25, -1.225, -1.2, -1.175, -1.15, -1.125, -1.1, -1.075, -1.05, -1.025, -1.0, -0.975, -0.95, -0.925, -0.9, -0.875, -0.85, -0.825, -0.8, -0.775, -0.75, -0.725, -0.7, -0.675, -0.65, -0.625, -0.6, -0.575, -0.55, -0.525, -0.5, -0.475, -0.45, -0.425, -0.4, -0.375, -0.35, -0.325, -0.3, -0.275, -0.25, -0.225, -0.2, -0.175, -0.15, -0.125, -0.1, -0.075, -0.05, -0.025]\n"
                                "                ,\n"
                                "                datasets: [{\n"
                                "                    label: 'Speed PID setpoint (RPS)',\n"
                                "                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"
                                "                    ,\n"
                                "                    borderWidth: 1\n"
                                "                }, {\n"
                                "                    label: 'Real value (RPS)',\n"
                                "                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"
                                "                    ,\n"
                                "                    borderWidth: 1\n"
                                "                }]\n"
                                "            },\n"
                                "            options: {\n"
                                "                animation: false,\n"
                                "                spanGaps: true, // enable for all datasets\n"
                                "                datasets: {\n"
                                "                    line: {\n"
                                "                        pointRadius: 0 // disable for all `'line'` datasets\n"
                                "                    }\n"
                                "                },\n"
                                "                elements: {\n"
                                "                    point: {\n"
                                "                        radius: 0 // default to disabled in all datasets\n"
                                "                    }\n"
                                "                }\n"
                                "            }\n"
                                "        });\n"
                                "\n"
                                "        function toggleChartVisibility(chartId) {\n"
                                "            var chartContainer = document.querySelector('.' + chartId);\n"
                                "            if (chartContainer.style.display === 'block') {\n"
                                "                chartContainer.style.display = 'none';\n"
                                "            } else {\n"
                                "                chartContainer.style.display = 'block';\n"
                                "            }\n"
                                "        }\n"
                                "\n"
                                "        document.addEventListener(\"DOMContentLoaded\", () => {\n"
                                "\n"
                                "            var pSpeed = document.getElementById('speedPIDp');\n"
                                "            var iSpeed = document.getElementById('speedPIDi');\n"
                                "            var dSpeed = document.getElementById('speedPIDd');\n"
                                "            var pPointing = document.getElementById('pointingPIDp');\n"
                                "            var iPointing = document.getElementById('pointingPIDi');\n"
                                "            var dPointing = document.getElementById('pointingPIDd');\n"
                                "\n"
                                "            var failed = false;\n"
                                "\n"
                                "            fetch(\"/settings/pointing/p\").then(response => response.text()).then((text) => { pPointing.value = text });\n"
                                "            fetch(\"/settings/pointing/i\").then(response => response.text()).then((text) => { iPointing.value = text });\n"
                                "            fetch(\"/settings/pointing/d\").then(response => response.text()).then((text) => { dPointing.value = text });\n"
                                "            fetch(\"/settings/speed/p\").then(response => response.text()).then((text) => { pSpeed.value = text });\n"
                                "            fetch(\"/settings/speed/i\").then(response => response.text()).then((text) => { iSpeed.value = text });\n"
                                "            fetch(\"/settings/speed/d\").then(response => response.text()).then((text) => { dSpeed.value = text });\n"
                                "\n"
                                "        });\n"
                                "\n"
                                "        function sliderChange() {\n"
                                "            var slider = document.getElementById('slider');\n"
                                "            var arm = document.getElementById('clock-arm');\n"
                                "            var value = slider.value;\n"
                                "\n"
                                "            document.getElementById('target').innerText = value;\n"
                                "\n"
                                "            var armRotation = (value / 359) * 360;\n"
                                "            arm.style.transform = `translateX(-50%) rotate(${armRotation}deg)`;\n"
                                "\n"
                                "            var tgt = document.getElementById(\"target\");\n"
                                "            tgt.innerText = slider.value;\n"
                                "            console.log(slider.value);\n"
                                "\n"
                                "            fetch(\"/point-target\", {\n"
                                "                method: \"POST\",\n"
                                "                body: slider.value,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "        }\n"
                                "\n"
                                "        function toggleSlider() {\n"
                                "            slider.disabled = !slider.disabled;\n"
                                "            var button = document.getElementById(\"state-change\");\n"
                                "            button.innerText = !slider.disabled ? \"Pointing mode\" : \"Speed hold mode\";\n"
                                "            var target = document.getElementById(\"target\");\n"
                                "            if (slider.disabled) {\n"
                                "                target.classList.add('grayed-out');\n"
                                "            } else {\n"
                                "                target.classList.remove('grayed-out');\n"
                                "            }\n"
                                "            fetch(\"/toggle-mode\", {\n"
                                "                method: \"POST\",\n"
                                "                body: slider.disabled ? 1 : 0,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "        }\n"
                                "\n"
                                "        function toggleStabilization() {\n"
                                "            var toggle = document.getElementById(\"stabilization-toggle\");\n"
                                "            stabilization = !stabilization;\n"
                                "            toggle.innerText = stabilization ? \"ON\" : \"OFF\";\n"
                                "            fetch(\"/on\", {\n"
                                "                method: \"POST\",\n"
                                "                body: stabilization ? 1 : 0,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "        }\n"
                                "\n"
                                "        function applySettings() {\n"
                                "            var pSpeed = document.getElementById('speedPIDp').value;\n"
                                "            var iSpeed = document.getElementById('speedPIDi').value;\n"
                                "            var dSpeed = document.getElementById('speedPIDd').value;\n"
                                "            var pPointing = document.getElementById('pointingPIDp').value;\n"
                                "            var iPointing = document.getElementById('pointingPIDi').value;\n"
                                "            var dPointing = document.getElementById('pointingPIDd').value;\n"
                                "\n"
                                "            console.log('Settings:');\n"
                                "            console.log('Platform Speed Controller - P:', pSpeed, 'I:', iSpeed, 'D:', dSpeed);\n"
                                "            console.log('Platform Pointing Controller - P:', pPointing, 'I:', iPointing, 'D:', dPointing);\n"
                                "\n"
                                "            fetch(\"/settings/speed/p\", {\n"
                                "                method: \"POST\",\n"
                                "                body: pSpeed,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "\n"
                                "            fetch(\"/settings/speed/i\", {\n"
                                "                method: \"POST\",\n"
                                "                body: iSpeed,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "\n"
                                "            fetch(\"/settings/speed/d\", {\n"
                                "                method: \"POST\",\n"
                                "                body: dSpeed,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "\n"
                                "\n"
                                "            fetch(\"/settings/pointing/p\", {\n"
                                "                method: \"POST\",\n"
                                "                body: pPointing,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "\n"
                                "            fetch(\"/settings/pointing/i\", {\n"
                                "                method: \"POST\",\n"
                                "                body: iPointing,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "\n"
                                "            fetch(\"/settings/pointing/d\", {\n"
                                "                method: \"POST\",\n"
                                "                body: dPointing,\n"
                                "                headers: {\n"
                                "                    \"Content-type\": \"text/html; charset=UTF-8\"\n"
                                "                }\n"
                                "            });\n"
                                "\n"
                                "        }\n"
                                "\n"
                                "        function saveToFlash() {\n"
                                "            applySettings();\n"
                                "            fetch(\"/save-settings\");\n"
                                "        }\n"
                                "\n"
                                "        function updatePlot(plot, setpoint, value) {\n"
                                "            plotShiftData(plot);\n"
                                "            plotAddData(plot, setpoint, value);\n"
                                "        }\n"
                                "\n"
                                "        function plotAddData(chart, setpoint, value) {\n"
                                "            chart.data.datasets[0].data.push(setpoint);\n"
                                "            chart.data.datasets[1].data.push(value);\n"
                                "            chart.update(\"none\");\n"
                                "        }\n"
                                "\n"
                                "        function plotShiftData(chart) {\n"
                                "            chart.data.datasets.forEach((dataset) => {\n"
                                "                dataset.data.shift();\n"
                                "            });\n"
                                "            chart.update(\"none\");\n"
                                "        }\n"
                                "\n"
                                "\n"
                                "        const socket = new WebSocket('ws://10.0.0.1/ws');\n"
                                "\n"
                                "        // Connection opened\n"
                                "        socket.addEventListener('open', (event) => {\n"
                                "            console.log('WebSocket connection opened:', event);\n"
                                "        });\n"
                                "\n"
                                "        // Listen for messages\n"
                                "        socket.addEventListener('message', (event) => {\n"
                                "            console.log('WebSocket message received:', event);\n"
                                "            var data = JSON.parse(event.data)\n"
                                "            updatePlot(pointingChart, data.pointing.setpoint, data.pointing.value);\n"
                                "            updatePlot(speedChart, data.speed.setpoint, data.speed.value);\n"
                                "        });\n"
                                "\n"
                                "        // Connection closed\n"
                                "        socket.addEventListener('close', (event) => {\n"
                                "            console.log('WebSocket connection closed:', event);\n"
                                "        });\n"
                                "\n"
                                "        // Connection error\n"
                                "        socket.addEventListener('error', (event) => {\n"
                                "            console.error('WebSocket error:', event);\n"
                                "        });\n"
                                "\n"
                                "    </script>\n"
                                "</body>\n"
                                "\n"
                                "</html>";

extern const char *
    indexPage;

#endif